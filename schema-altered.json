{
  "openapi": "3.0.2",
  "info": {
    "title": "Deflect Dashboard API Documentation",
    "version": "v0.1"
  },
  "paths": {
    "/api/auth/logout": {
      "get": {
        "operationId": "listAuthLogouts",
        "description": "API to revoke token",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "operationId": "listAuthMes",
        "description": "API to query current user",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/csrf": {
      "get": {
        "operationId": "listAuthCSRFs",
        "description": "API to get CSRF token",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/profile": {
      "get": {
        "operationId": "retrieveUserProfile",
        "description": "get current user profile",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "profile"
        ]
      },
      "put": {
        "operationId": "updateUserProfile",
        "description": "update current user profile",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "profile"
        ]
      },
      "patch": {
        "operationId": "partialUpdateUserProfile",
        "description": "partial update using self.partial_update with current user profile",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "profile"
        ]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "listUsers",
        "description": "List of all users (Permission: IsAdminOrDenied)",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "required": false,
            "in": "query",
            "description": "username",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_name",
            "required": false,
            "in": "query",
            "description": "first_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "retrieveUser",
        "description": "Detail of a user (Permission: IsAdminOrDenied)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-users"
        ]
      }
    },
    "/api/website": {
      "get": {
        "operationId": "listWebsiteListCreates",
        "description": "Get all website under current user",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteListCreate"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      },
      "post": {
        "operationId": "createWebsiteListCreate",
        "description": "Create new website under current user",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteListCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteListCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteListCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteListCreate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      }
    },
    "/api/website/{id}": {
      "get": {
        "operationId": "retrieveWebsite",
        "description": "Get all sites under current user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this website.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      },
      "patch": {
        "operationId": "partialUpdateWebsite",
        "description": "Although we can update website options here,\nits recommended to use /api/website/{id}/options/{name} for better logging",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this website.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteDetail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteDetail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      },
      "delete": {
        "operationId": "destroyWebsite",
        "description": "Delete a website and all associated records",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this website.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      }
    },
    "/api/website/{id}/options": {
      "get": {
        "operationId": "listWebsiteOptions",
        "description": "List all options of a website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteOption"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      }
    },
    "/api/website/{id}/options/{name}": {
      "get": {
        "operationId": "retrieveWebsiteOptionSerializerDetail",
        "description": "Get target option under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteOptionDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      },
      "post": {
        "operationId": "createWebsiteOptionSerializerDetail",
        "description": "Create option under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteOptionDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      },
      "patch": {
        "operationId": "partialUpdateWebsiteOptionSerializerDetail",
        "description": "Update option under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteOptionDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      },
      "delete": {
        "operationId": "destroyWebsiteOptionSerializerDetail",
        "description": "Delete option under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      }
    },
    "/api/website/{id}/records": {
      "get": {
        "operationId": "listRecordListCreates",
        "description": "List all DNS records under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordListCreate"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      },
      "post": {
        "operationId": "createRecordListCreate",
        "description": "Create a new DNS record under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordListCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RecordListCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RecordListCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListCreate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      }
    },
    "/api/website/{id}/records/{rpk}": {
      "get": {
        "operationId": "retrieveRecordDetail",
        "description": "Get target DNS record using DNS record ID (rpk) under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      },
      "patch": {
        "operationId": "partialUpdateRecordDetail",
        "description": "Update target DNS record using DNS record ID (rpk) under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordDetail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RecordDetail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RecordDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      },
      "delete": {
        "operationId": "destroyRecordDetail",
        "description": "Delete target DNS record using DNS record ID (rpk) under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      }
    },
    "/api/dnet/": {
      "get": {
        "operationId": "listDnets",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dnet"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-dnet"
        ]
      },
      "post": {
        "operationId": "createDnet",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Dnet"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Dnet"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Dnet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dnet"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-dnet"
        ]
      }
    },
    "/api/dnet/{id}": {
      "get": {
        "operationId": "retrieveDnet",
        "description": "We are not using `generics.RetrieveUpdateDestroyAPIView` here\nsince dnet shouldn't be allowed to update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this dnet.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dnet"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-dnet"
        ]
      },
      "delete": {
        "operationId": "destroyDnet",
        "description": "We are not using `generics.RetrieveUpdateDestroyAPIView` here\nsince dnet shouldn't be allowed to update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this dnet.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "admin-dnet"
        ]
      }
    },
    "/api/edge/": {
      "get": {
        "operationId": "listEdges",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Edge"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-edge"
        ]
      },
      "post": {
        "operationId": "createEdge",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Edge"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Edge"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Edge"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Edge"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-edge"
        ]
      }
    },
    "/api/edge/{id}": {
      "get": {
        "operationId": "retrieveEdge",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this edge.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Edge"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-edge"
        ]
      },
      "put": {
        "operationId": "updateEdge",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this edge.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Edge"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Edge"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Edge"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Edge"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-edge"
        ]
      },
      "patch": {
        "operationId": "partialUpdateEdge",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this edge.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Edge"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Edge"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Edge"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Edge"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-edge"
        ]
      },
      "delete": {
        "operationId": "destroyEdge",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this edge.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "admin-edge"
        ]
      }
    },
    "/api/integration/gen_site_config": {
      "get": {
        "operationId": "listGenSiteConfigs",
        "description": "Invoke gen_site_config task in celery (admin only)",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integration"
        ]
      }
    },
    "/api/integration/zone_fetch": {
      "get": {
        "operationId": "listZoneFetchs",
        "description": "Query AsyncResult for task status",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "test"
        ]
      },
      "post": {
        "operationId": "createZoneFetch",
        "description": "Fetch DNS zone for domain",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "test"
        ]
      }
    },
    "/api/integration/test_sentry": {
      "get": {
        "operationId": "listTestSentrys",
        "description": "Test sentry by raising an exception",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "test"
        ]
      }
    },
    "/api/special/{website_id}/tasks/fetch_dns_zone": {
      "get": {
        "operationId": "listTaskStatusFetchZones",
        "description": "Sample output:\n{\n    \"task_id\": \"d934c143-3aba-4759-a88e-ccc519b2cd20\",\n    \"task_name\": \"tasks.fetch_dns_zone_task\",\n    \"state\": \"SUCCESS\",\n    \"date_created\": \"2023-11-16T07:53:44.910986Z\",\n    \"date_done\": \"2023-11-16T07:54:07.003721Z\",\n    \"result\": \"[]\"\n}",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "special"
        ]
      }
    },
    "/api/website/{id}/hosting": {
      "get": {
        "operationId": "listHostings",
        "description": "List all hosting records under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hosting"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      },
      "post": {
        "operationId": "createHosting",
        "description": "Create a new hosting record under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hosting"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      }
    },
    "/api/website/{id}/hosting/{hpk}": {
      "get": {
        "operationId": "retrieveHosting",
        "description": "GET/PATCH/DELETE: /api/website/<int:pk>/hosting/<int:hpk>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hosting"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      },
      "patch": {
        "operationId": "partialUpdateHosting",
        "description": "GET/PATCH/DELETE: /api/website/<int:pk>/hosting/<int:hpk>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hosting"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      },
      "delete": {
        "operationId": "destroyHosting",
        "description": "GET/PATCH/DELETE: /api/website/<int:pk>/hosting/<int:hpk>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      }
    },
    "/api/admin/all_website_options": {
      "get": {
        "operationId": "listAllWebsiteOptions",
        "description": "List all website options from OptionSchema",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/all_websites": {
      "get": {
        "operationId": "listWebsiteListCreates",
        "description": "Get all website under current user",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "url",
            "required": false,
            "in": "query",
            "description": "url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ip_address",
            "required": false,
            "in": "query",
            "description": "ip_address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebsiteListCreate"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/checks/on_edge/{website_id}": {
      "get": {
        "operationId": "retrieveChecksOnEdge",
        "description": "Check if the edge is up and running",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-checks"
        ]
      }
    },
    "/api/admin/checks/on_easydns/{website_id}": {
      "get": {
        "operationId": "retrieveChecksOnEasyDNS",
        "description": "Check if the domain is served by easyDNS",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-checks"
        ]
      }
    },
    "/api/admin/checks/dns_sync/{website_id}": {
      "get": {
        "operationId": "retrieveChecksDNSSync",
        "description": "Check that DNS records have synced to the nameservers\n\nReturns JSON result on success otherwise it raises an exception",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-checks"
        ]
      }
    },
    "/api/admin/easydns/{website_id}": {
      "get": {
        "operationId": "retrieveEasyDNS",
        "description": "Get easydns status from easyDNS (GET ?refersh_status=True to refresh status from easydns)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-easydns"
        ]
      },
      "post": {
        "operationId": "createEasyDNS",
        "description": "Register domain on easyDNS",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-easydns"
        ]
      },
      "put": {
        "operationId": "updateEasyDNS",
        "description": "Update domain primary NS on easyDNS (body param: primary_ns)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-easydns"
        ]
      },
      "delete": {
        "operationId": "destroyEasyDNS",
        "description": "Delete domain on easyDNS",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "admin-easydns"
        ]
      }
    },
    "/api/admin/action_log/{website_id}": {
      "get": {
        "operationId": "retrievePlaceholder",
        "description": "Log action",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Placeholder"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-action-log"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "createAuthToken",
        "description": "Override default rest_framework obtain_auth_token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/signup": {
      "post": {
        "operationId": "createAuthSignUpUser",
        "description": "Create a user and a website, arg: `email`, `url`, `business` = True (omit if non-profits)",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignUpUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignUpUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignUpUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSignUpUser"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/password_reset/validate_token/": {
      "post": {
        "operationId": "createResetToken",
        "description": "An Api View which provides a method to verify that a token is valid",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auth/password_reset/confirm/": {
      "post": {
        "operationId": "createPasswordToken",
        "description": "An Api View which provides a method to reset a password based on a unique token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordToken"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auth/password_reset/": {
      "post": {
        "operationId": "createEmail",
        "description": "An Api View which provides a method to request a password reset token based on an e-mail address\n\nSends a signal reset_password_token_created when a reset token was created",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/integration/test_email": {
      "post": {
        "operationId": "createTestEmail",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "test"
        ]
      }
    },
    "/api/integration/cache_purge/{website_id}": {
      "post": {
        "operationId": "createCachePurge",
        "description": "Purge cache for website",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integration"
        ]
      }
    },
    "/api/setup/{website_id}/{setup_step}": {
      "post": {
        "operationId": "createSetupStatus",
        "description": "API to update website setup status.\nNote status will only increase, not decrease.",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "setup_step",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "setup"
        ]
      }
    },
    "/api/special/{website_id}/banjax_auth_hash": {
      "patch": {
        "operationId": "partialUpdateBanjaxPassword",
        "description": "Update banjax passwor of current website",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanjaxPassword"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BanjaxPassword"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BanjaxPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanjaxPassword"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "special"
        ]
      }
    },
    "/api/admin/website/complete_setup/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteCompleteSetup",
        "description": "Mark the website as setup completed (No WebsiteStatusGuardMixin)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/reset_to_zero/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteResetToZero",
        "description": "Reset the website status to 0 (No WebsiteStatusGuardMixin)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/approve/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteApprove",
        "description": "Approve website (To 3.4)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/reject/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteReject",
        "description": "Reject website, To 0 (No WebsiteStatusGuardMixin)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/confirm_ns_info/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteConfirmNSInfo",
        "description": "Confirm NS info (To 3.5)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/confirm_technical_setup/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteConfirmTechnicalSetup",
        "description": "Confirm technical setup (To 3.6)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/update_status_and_notify/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteUpdateStatusAndNotify",
        "description": "Update website status and notify (To 4.0)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/restart_admin_setup/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteRestartAdminSetup",
        "description": "Restart admin setup, To to 3.0 and delete approval (No WebsiteStatusGuardMixin)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UserProfile": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "readOnly": true
          },
          "tos_accepted": {
            "type": "boolean"
          },
          "locale": {
            "type": "string",
            "maxLength": 5
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+\\\\z",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "websites": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "maxLength": 255
                },
                "status": {
                  "type": "number"
                },
                "ip_address": {
                  "type": "string",
                  "nullable": true,
                  "maxLength": 16
                },
                "under_attack": {
                  "type": "boolean"
                },
                "nsinfo": {
                  "type": "string",
                  "nullable": true,
                  "maxLength": 255
                },
                "business": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "nullable": true
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "nullable": true
                },
                "creator": {
                  "type": "integer"
                }
              },
              "required": [
                "url",
                "creator"
              ]
            },
            "readOnly": true
          }
        },
        "required": [
          "username"
        ]
      },
      "WebsiteListCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "maxLength": 255
          },
          "status": {
            "type": "number",
            "readOnly": true
          },
          "ip_address": {
            "type": "string",
            "nullable": true,
            "maxLength": 16
          },
          "admin_key": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "under_attack": {
            "type": "boolean"
          },
          "nsinfo": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "business": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "data": {
                  "type": "object",
                  "nullable": true
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "creator": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "url"
        ]
      },
      "WebsiteDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "type": "number",
            "readOnly": true
          },
          "ip_address": {
            "type": "string",
            "nullable": true,
            "maxLength": 16
          },
          "admin_key": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "under_attack": {
            "type": "boolean"
          },
          "nsinfo": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "business": {
            "type": "boolean",
            "readOnly": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "data": {
                  "type": "object",
                  "nullable": true
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "creator": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "options"
        ]
      },
      "WebsiteOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "WebsiteOptionDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "website_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "RecordListCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "maxLength": 6
          },
          "hostname": {
            "type": "string",
            "maxLength": 255
          },
          "value": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "nullable": true
          },
          "ttl": {
            "type": "integer",
            "nullable": true
          },
          "website_id": {
            "type": "string",
            "readOnly": true
          },
          "website": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "type",
          "hostname"
        ]
      },
      "RecordDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "maxLength": 6
          },
          "hostname": {
            "type": "string",
            "maxLength": 255
          },
          "value": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "nullable": true
          },
          "ttl": {
            "type": "integer",
            "nullable": true
          },
          "website": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "type",
          "hostname"
        ]
      },
      "Dnet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 20
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "Edge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "hostname": {
            "type": "string",
            "maxLength": 255
          },
          "ip": {
            "type": "string",
            "maxLength": 16
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "required": [
          "hostname",
          "ip"
        ]
      },
      "Hosting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "maxLength": 255
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "mission_textarea": {
            "type": "string",
            "nullable": true
          },
          "info_need_textarea": {
            "type": "string",
            "nullable": true
          },
          "audience_textarea": {
            "type": "string",
            "nullable": true
          },
          "how_we_help_textarea": {
            "type": "string",
            "nullable": true
          },
          "past_tech_difficulties_textarea": {
            "type": "string",
            "nullable": true
          },
          "new_or_migrate": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "pre_load_theme": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "other_theme": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "status": {
            "enum": [
              "request",
              "complete"
            ],
            "type": "string"
          },
          "hosting_type": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "email"
        ]
      },
      "Placeholder": {
        "type": "object",
        "properties": {}
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "writeOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "token": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AuthSignUpUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "username": {
            "type": "string",
            "readOnly": true,
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
          },
          "first_name": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "PasswordToken": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "token"
        ]
      },
      "Email": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "BanjaxPassword": {
        "type": "object",
        "properties": {
          "banjax_auth_hash": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "banjax_auth_hash"
        ]
      }
    }
  }
}