{
  "openapi": "3.0.2",
  "info": {
    "title": "Deflect Dashboard API Documentation",
    "version": "v0.1"
  },
  "paths": {
    "/api/auth/logout": {
      "get": {
        "operationId": "listAuthLogouts",
        "description": "API to revoke token",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "operationId": "listAuthMes",
        "description": "API to query current user",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/csrf": {
      "get": {
        "operationId": "listAuthCSRFs",
        "description": "API to get CSRF token",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/me": {
      "get": {
        "operationId": "listAuthMeZammads",
        "description": "API to query current user for zammad",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/profile": {
      "get": {
        "operationId": "retrieveUserProfile",
        "description": "get current user profile",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "profile"
        ]
      },
      "put": {
        "operationId": "updateUserProfile",
        "description": "update current user profile",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "profile"
        ]
      },
      "patch": {
        "operationId": "partialUpdateUserProfile",
        "description": "partial update using self.partial_update with current user profile",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "profile"
        ]
      }
    },
    "/api/profile/unsubscribe": {
      "get": {
        "operationId": "listEmailUnsubscribes",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EmailUnsubscribe"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "profile"
        ]
      }
    },
    "/api/website": {
      "get": {
        "operationId": "listWebsiteListCreates",
        "description": "Get all website under current user",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteListCreate"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      },
      "post": {
        "operationId": "createWebsiteListCreate",
        "description": "Create new website under current user",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteListCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteListCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteListCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteListCreate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      }
    },
    "/api/website/{id}": {
      "get": {
        "operationId": "retrieveWebsite",
        "description": "Get all sites under current user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this website.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      },
      "patch": {
        "operationId": "partialUpdateWebsite",
        "description": "Although we can update website options here,\nits recommended to use /api/website/{id}/options/{name} for better logging",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this website.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteDetail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteDetail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      },
      "delete": {
        "operationId": "destroyWebsite",
        "description": "Delete a website and all associated records",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this website.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "website"
        ]
      }
    },
    "/api/website/{id}/options": {
      "get": {
        "operationId": "listWebsiteOptions",
        "description": "List all options of a website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteOption"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      }
    },
    "/api/website/{id}/options/{name}": {
      "get": {
        "operationId": "retrieveWebsiteOptionSerializerDetail",
        "description": "Get target option under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteOptionDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      },
      "post": {
        "operationId": "createWebsiteOptionSerializerDetail",
        "description": "Create option under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteOptionDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      },
      "patch": {
        "operationId": "partialUpdateWebsiteOptionSerializerDetail",
        "description": "Update option under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteOptionDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteOptionDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      },
      "delete": {
        "operationId": "destroyWebsiteOptionSerializerDetail",
        "description": "Delete option under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "website_options"
        ]
      }
    },
    "/api/website/{id}/records": {
      "get": {
        "operationId": "listRecordListCreates",
        "description": "List all DNS records under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RecordListCreate"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      },
      "post": {
        "operationId": "createRecordListCreate",
        "description": "Create a new DNS record under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordListCreate"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RecordListCreate"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RecordListCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordListCreate"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      }
    },
    "/api/website/{id}/records/{rpk}": {
      "get": {
        "operationId": "retrieveRecordDetail",
        "description": "Get target DNS record using DNS record ID (rpk) under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      },
      "patch": {
        "operationId": "partialUpdateRecordDetail",
        "description": "Update target DNS record using DNS record ID (rpk) under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordDetail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/RecordDetail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/RecordDetail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordDetail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      },
      "delete": {
        "operationId": "destroyRecordDetail",
        "description": "Delete target DNS record using DNS record ID (rpk) under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "DNS"
        ]
      }
    },
    "/api/website/{id}/authorize_user": {
      "get": {
        "operationId": "listWebsiteAuthorizes",
        "description": "Get all website groups under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteAuthorize"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website-authorize-user"
        ]
      },
      "post": {
        "operationId": "createWebsiteAuthorize",
        "description": "Create new website group under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteAuthorize"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteAuthorize"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteAuthorize"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAuthorize"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "website-authorize-user"
        ]
      }
    },
    "/api/integration/gen_site_config": {
      "get": {
        "operationId": "listGenSiteConfigs",
        "description": "Invoke gen_site_config task in celery (admin only)",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "integration"
        ]
      }
    },
    "/api/integration/zone_fetch": {
      "get": {
        "operationId": "listZoneFetchs",
        "description": "Query AsyncResult for task status",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ZoneFetch"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "special"
        ]
      },
      "post": {
        "operationId": "createZoneFetch",
        "description": "Fetch DNS zone for domain",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZoneFetch"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ZoneFetch"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ZoneFetch"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneFetch"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "special"
        ]
      }
    },
    "/api/integration/test_sentry": {
      "get": {
        "operationId": "listTestSentrys",
        "description": "Test sentry by raising an exception",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "test"
        ]
      }
    },
    "/api/special/{website_id}/tasks/fetch_dns_zone": {
      "get": {
        "operationId": "listTaskStatusFetchZones",
        "description": "Sample output:\n{\n    \"task_id\": \"d934c143-3aba-4759-a88e-ccc519b2cd20\",\n    \"task_name\": \"tasks.fetch_dns_zone_task\",\n    \"state\": \"SUCCESS\",\n    \"date_created\": \"2023-11-16T07:53:44.910986Z\",\n    \"date_done\": \"2023-11-16T07:54:07.003721Z\",\n    \"result\": \"[]\"\n}",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskStatusFetchZone"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "special"
        ]
      }
    },
    "/api/special/action_status/{website_id}": {
      "get": {
        "operationId": "retrieveActionLog",
        "description": "",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionLog"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "special"
        ]
      }
    },
    "/api/special/eqpress_info/{website_id}": {
      "get": {
        "operationId": "retrievePlaceholder",
        "description": "Provide eQPress connection details for the website.",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Placeholder"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "special"
        ]
      }
    },
    "/api/website/{id}/survey": {
      "get": {
        "operationId": "retrieveSurvey",
        "description": "Get survey of current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "survey"
        ]
      },
      "post": {
        "operationId": "createSurvey",
        "description": "Create new survey of current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Survey"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Survey"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Survey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "survey"
        ]
      }
    },
    "/api/website/{id}/hosting": {
      "get": {
        "operationId": "listHostings",
        "description": "List all hosting records under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hosting"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      },
      "post": {
        "operationId": "createHosting",
        "description": "Create a new hosting record under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hosting"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      }
    },
    "/api/website/{id}/hosting/{hpk}": {
      "get": {
        "operationId": "retrieveHosting",
        "description": "GET/PATCH/DELETE: /api/website/<int:pk>/hosting/<int:hpk>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hosting"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      },
      "patch": {
        "operationId": "partialUpdateHosting",
        "description": "GET/PATCH/DELETE: /api/website/<int:pk>/hosting/<int:hpk>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Hosting"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hosting"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      },
      "delete": {
        "operationId": "destroyHosting",
        "description": "GET/PATCH/DELETE: /api/website/<int:pk>/hosting/<int:hpk>",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "hosting"
        ]
      }
    },
    "/api/admin/all_website_options": {
      "get": {
        "operationId": "listAllWebsiteOptions",
        "description": "List all website options from OptionSchema",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/all_websites": {
      "get": {
        "operationId": "listWebsiteListCreates",
        "description": "Get all website under current user",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "url",
            "required": false,
            "in": "query",
            "description": "url",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ip_address",
            "required": false,
            "in": "query",
            "description": "ip_address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WebsiteListCreate"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/survey": {
      "get": {
        "operationId": "listSurveys",
        "description": "List all surveys",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "survey_reason",
            "required": false,
            "in": "query",
            "description": "survey_reason",
            "schema": {
              "type": "string",
              "enum": [
                "A-Under-Attack",
                "B-Under-Threat",
                "C-Better-Security"
              ]
            }
          },
          {
            "name": "survey_country",
            "required": false,
            "in": "query",
            "description": "survey_country",
            "schema": {
              "type": "string",
              "enum": [
                "AF",
                "AX",
                "AL",
                "DZ",
                "AS",
                "AD",
                "AO",
                "AI",
                "AQ",
                "AG",
                "AR",
                "AM",
                "AW",
                "AU",
                "AT",
                "AZ",
                "BS",
                "BH",
                "BD",
                "BB",
                "BY",
                "BE",
                "BZ",
                "BJ",
                "BM",
                "BT",
                "BO",
                "BQ",
                "BA",
                "BW",
                "BV",
                "BR",
                "IO",
                "BN",
                "BG",
                "BF",
                "BI",
                "CV",
                "KH",
                "CM",
                "CA",
                "KY",
                "CF",
                "TD",
                "CL",
                "CN",
                "CX",
                "CC",
                "CO",
                "KM",
                "CG",
                "CD",
                "CK",
                "CR",
                "CI",
                "HR",
                "CU",
                "CW",
                "CY",
                "CZ",
                "DK",
                "DJ",
                "DM",
                "DO",
                "EC",
                "EG",
                "SV",
                "GQ",
                "ER",
                "EE",
                "SZ",
                "ET",
                "FK",
                "FO",
                "FJ",
                "FI",
                "FR",
                "GF",
                "PF",
                "TF",
                "GA",
                "GM",
                "GE",
                "DE",
                "GH",
                "GI",
                "GR",
                "GL",
                "GD",
                "GP",
                "GU",
                "GT",
                "GG",
                "GN",
                "GW",
                "GY",
                "HT",
                "HM",
                "VA",
                "HN",
                "HK",
                "HU",
                "IS",
                "IN",
                "ID",
                "IR",
                "IQ",
                "IE",
                "IM",
                "IL",
                "IT",
                "JM",
                "JP",
                "JE",
                "JO",
                "KZ",
                "KE",
                "KI",
                "KP",
                "KR",
                "KW",
                "KG",
                "LA",
                "LV",
                "LB",
                "LS",
                "LR",
                "LY",
                "LI",
                "LT",
                "LU",
                "MO",
                "MG",
                "MW",
                "MY",
                "MV",
                "ML",
                "MT",
                "MH",
                "MQ",
                "MR",
                "MU",
                "YT",
                "MX",
                "FM",
                "MD",
                "MC",
                "MN",
                "ME",
                "MS",
                "MA",
                "MZ",
                "MM",
                "NA",
                "NR",
                "NP",
                "NL",
                "NC",
                "NZ",
                "NI",
                "NE",
                "NG",
                "NU",
                "NF",
                "MK",
                "MP",
                "NO",
                "OM",
                "PK",
                "PW",
                "PS",
                "PA",
                "PG",
                "PY",
                "PE",
                "PH",
                "PN",
                "PL",
                "PT",
                "PR",
                "QA",
                "RE",
                "RO",
                "RU",
                "RW",
                "BL",
                "SH",
                "KN",
                "LC",
                "MF",
                "PM",
                "VC",
                "WS",
                "SM",
                "ST",
                "SA",
                "SN",
                "RS",
                "SC",
                "SL",
                "SG",
                "SX",
                "SK",
                "SI",
                "SB",
                "SO",
                "ZA",
                "GS",
                "SS",
                "ES",
                "LK",
                "SD",
                "SR",
                "SJ",
                "SE",
                "CH",
                "SY",
                "TW",
                "TJ",
                "TZ",
                "TH",
                "TL",
                "TG",
                "TK",
                "TO",
                "TT",
                "TN",
                "TR",
                "TM",
                "TC",
                "TV",
                "UG",
                "UA",
                "AE",
                "GB",
                "US",
                "UM",
                "UY",
                "UZ",
                "VU",
                "VE",
                "VN",
                "VG",
                "VI",
                "WF",
                "EH",
                "YE",
                "ZM",
                "ZW",
                ""
              ]
            }
          },
          {
            "name": "survey_regional_focus",
            "required": false,
            "in": "query",
            "description": "survey_regional_focus",
            "schema": {
              "type": "string",
              "enum": [
                "EE",
                "WE",
                "EUA",
                "EA",
                "SEA",
                "SA",
                "ME",
                "OC",
                "NAF",
                "SAF",
                "WAF",
                "SSAF",
                "NA",
                "SAM",
                "CA",
                "GL",
                ""
              ]
            }
          },
          {
            "name": "survey_content_type",
            "required": false,
            "in": "query",
            "description": "Contains content type",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "survey_language",
            "required": false,
            "in": "query",
            "description": "Contains language",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "website_status",
            "required": false,
            "in": "query",
            "description": "Website status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "website_url",
            "required": false,
            "in": "query",
            "description": "Website URL",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "website_business",
            "required": false,
            "in": "query",
            "description": "Website business",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "website_created_at",
            "required": false,
            "in": "query",
            "description": "Website created at",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Survey"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-survey"
        ]
      }
    },
    "/api/admin/checks/on_edge/{website_id}": {
      "get": {
        "operationId": "retrieveChecksOnEdge",
        "description": "Check if the edge is up and running",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-checks"
        ]
      }
    },
    "/api/admin/checks/on_easydns/{website_id}": {
      "get": {
        "operationId": "retrieveChecksOnEasyDNS",
        "description": "Check if the domain is served by easyDNS",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-checks"
        ]
      }
    },
    "/api/admin/checks/dns_sync/{website_id}": {
      "get": {
        "operationId": "retrieveChecksDNSSync",
        "description": "Check that DNS records have synced to the nameservers\n\nReturns JSON result on success otherwise it raises an exception",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-checks"
        ]
      }
    },
    "/api/admin/banjax/banned": {
      "get": {
        "operationId": "listBanjaxBanneds",
        "description": "Fetch banjax banned IP by domain",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-banjax"
        ]
      }
    },
    "/api/admin/easydns/{website_id}": {
      "get": {
        "operationId": "retrieveEasyDNS",
        "description": "Get easydns status from easyDNS (GET ?refresh_status=True to refresh status from easydns)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-easydns"
        ]
      },
      "post": {
        "operationId": "createEasyDNS",
        "description": "Register domain on easyDNS",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-easydns"
        ]
      },
      "put": {
        "operationId": "updateEasyDNS",
        "description": "Update domain primary NS on easyDNS (body param: primary_ns)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-easydns"
        ]
      },
      "delete": {
        "operationId": "destroyEasyDNS",
        "description": "Delete domain on easyDNS",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "admin-easydns"
        ]
      }
    },
    "/api/admin/dnet": {
      "get": {
        "operationId": "listDnets",
        "description": "Fetch edges ip list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-dnet"
        ]
      }
    },
    "/api/admin/edge": {
      "get": {
        "operationId": "listEdges",
        "description": "Fetch edges ip list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-edge"
        ]
      }
    },
    "/api/admin/action_log/{website_id}": {
      "get": {
        "operationId": "retrievePlaceholder",
        "description": "Log action",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Placeholder"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-action-log"
        ]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "listUsers",
        "description": "List of all users (Permission: IsAdminOrDenied)",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "A page number within the paginated result set.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "required": false,
            "in": "query",
            "description": "Number of results to return per page.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "required": false,
            "in": "query",
            "description": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "required": false,
            "in": "query",
            "description": "username",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "required": false,
            "in": "query",
            "description": "email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_active",
            "required": false,
            "in": "query",
            "description": "is_active",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_staff",
            "required": false,
            "in": "query",
            "description": "is_staff",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_superuser",
            "required": false,
            "in": "query",
            "description": "is_superuser",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "A search term.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ordering",
            "required": false,
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 123
                    },
                    "next": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                      "type": "string",
                      "nullable": true,
                      "format": "uri",
                      "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserAdmin"
                      }
                    }
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "retrieveUser",
        "description": "Detail of a user (Permission: IsAdminOrDenied)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAdmin"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-users"
        ]
      }
    },
    "/api/certificate/{id}/origin": {
      "get": {
        "operationId": "listCertificates",
        "description": "List all origin certificates under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this certificate.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CertificateOrigin"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "certificate"
        ]
      },
      "post": {
        "operationId": "createCertificate",
        "description": "Create new website origin certificate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A unique integer value identifying this certificate.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateOrigin"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CertificateOrigin"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CertificateOrigin"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateOrigin"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "certificate"
        ]
      }
    },
    "/api/certificate/{id}/download/{cpk}": {
      "get": {
        "operationId": "retrieveCertificateOrigin",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificateOrigin"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "certificate"
        ]
      }
    },
    "/api/certificate/{id}/public": {
      "get": {
        "operationId": "listCertificatePublics",
        "description": "Get website public certificates info",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CertificatePublic"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "certificate"
        ]
      },
      "post": {
        "operationId": "createCertificatePublic",
        "description": "Save website public certificate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificatePublic"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CertificatePublic"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CertificatePublic"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CertificatePublic"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "certificate"
        ]
      }
    },
    "/api/cstats/{id}/{type}": {
      "get": {
        "operationId": "retrieveCstats",
        "description": "Get cstats for website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cstats"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "cstats"
        ]
      }
    },
    "/api/stats/banjax": {
      "get": {
        "operationId": "listPlaceholders",
        "description": "Get global cstats",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Placeholder"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "cstats"
        ]
      }
    },
    "/api/oauth2/authorize/": {
      "get": {
        "operationId": "listAuthorizationOauth2s",
        "description": "Rewrite AuthorizationView from oauth2_provider",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "oauth2"
        ]
      }
    },
    "/api/mfa/user_active_methods": {
      "get": {
        "operationId": "listUserMFAMethods",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserMFAMethod"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/zammad/ticket": {
      "get": {
        "operationId": "listZammadTickets",
        "description": "Get ticket list",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "zammad"
        ]
      },
      "post": {
        "operationId": "createZammadTicket",
        "description": "Create new ticket",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "zammad"
        ]
      }
    },
    "/api/zammad/ticket/{tpk}/articles": {
      "get": {
        "operationId": "listZammadTicketArticles",
        "description": "Get ticket articles",
        "parameters": [
          {
            "name": "tpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "zammad"
        ]
      }
    },
    "/api/stripe/subscription": {
      "get": {
        "operationId": "listStripeSubscriptions",
        "description": "Get current subscriptions",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StripeSubscription"
                  }
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "stripe"
        ]
      }
    },
    "/api/stripe/subscription/{id}": {
      "get": {
        "operationId": "retrieveStripeWebsiteSubscription",
        "description": "Get current subscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeWebsiteSubscription"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "stripe"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "createAuthToken",
        "description": "Override default rest_framework obtain_auth_token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/login/code": {
      "post": {
        "operationId": "createMFASecondStep",
        "description": "Override default rest_framework obtain_auth_token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/signup": {
      "post": {
        "operationId": "createAuthSignUpUser",
        "description": "Create a user and a website, arg: `email`, `url`, `business` = True (omit if non-profits)",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignUpUser"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignUpUser"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignUpUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthSignUpUser"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/api/auth/password_reset/validate_token/": {
      "post": {
        "operationId": "createResetToken",
        "description": "An Api View which provides a method to verify that a token is valid",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ResetToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auth/password_reset/confirm/": {
      "post": {
        "operationId": "createPasswordToken",
        "description": "An Api View which provides a method to reset a password based on a unique token",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PasswordToken"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PasswordToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PasswordToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/auth/password_reset/": {
      "post": {
        "operationId": "createEmail",
        "description": "An Api View which provides a method to request a password reset token based on an e-mail address\n\nSends a signal reset_password_token_created when a reset token was created",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Email"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Email"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/integration/test_email": {
      "post": {
        "operationId": "createTestEmail",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "test"
        ]
      }
    },
    "/api/special/cache_purge/{website_id}": {
      "post": {
        "operationId": "createCachePurge",
        "description": "Cache purge for website (GET ?sync=True to get result in sync)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CachePurge"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CachePurge"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CachePurge"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CachePurge"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "special"
        ]
      }
    },
    "/api/admin/survey/{id}": {
      "post": {
        "operationId": "createSurvey",
        "description": "Create new survey of current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Survey"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Survey"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Survey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Survey"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-survey"
        ]
      }
    },
    "/api/admin/banjax/unban": {
      "post": {
        "operationId": "createBanjaxUnbanned",
        "description": "Unban banjax banned IP",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-banjax"
        ]
      }
    },
    "/api/oauth2/token/": {
      "post": {
        "operationId": "createOauth2Token",
        "description": "Rewrite the TokenView view from oauth2_provider",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "oauth2"
        ]
      }
    },
    "/api/oauth2/revoke/": {
      "post": {
        "operationId": "createOauth2TokenRevoke",
        "description": "Rewrite the RevokeTokenView view from oauth2_provider",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthToken"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "oauth2"
        ]
      }
    },
    "/api/mfa/{method}/activate": {
      "post": {
        "operationId": "createMFAMethodActivation",
        "description": "",
        "parameters": [
          {
            "name": "method",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mfa/{method}/deactivate": {
      "post": {
        "operationId": "createMFAMethodDeactivation",
        "description": "Refactoring trench plugin logic for delete mfa record after deactivate",
        "parameters": [
          {
            "name": "method",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mfa/{method}/activate/confirm": {
      "post": {
        "operationId": "createMFAMethodConfirmActivation",
        "description": "Refactoring trench plugin logic for keep is_primaty status of mfa",
        "parameters": [
          {
            "name": "method",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/mfa/{method}/codes/regenerate": {
      "post": {
        "operationId": "createMFAMethodBackupCodesRegeneration",
        "description": "",
        "parameters": [
          {
            "name": "method",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "api"
        ]
      }
    },
    "/api/stripe/checkout/{website_id}": {
      "post": {
        "operationId": "createStripeCheckout",
        "description": "Create a Stripe checkout session.",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeCheckout"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StripeCheckout"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StripeCheckout"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeCheckout"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "stripe"
        ]
      }
    },
    "/api/stripe/webhook/{webhook_id}": {
      "post": {
        "operationId": "createStripeWebhook",
        "description": "Webhook endpoint for stripe",
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripeWebhook"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StripeWebhook"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StripeWebhook"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeWebhook"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "stripe"
        ]
      }
    },
    "/api/stripe/portal": {
      "post": {
        "operationId": "createStripePortal",
        "description": "Get current subscriptions",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripePortal"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/StripePortal"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/StripePortal"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripePortal"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "stripe"
        ]
      }
    },
    "/api/profile/password": {
      "patch": {
        "operationId": "partialUpdateChangePassword",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChangePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangePassword"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "profile"
        ]
      }
    },
    "/api/profile/email": {
      "patch": {
        "operationId": "partialUpdateChangeEmail",
        "description": "",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmail"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmail"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ChangeEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeEmail"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "profile"
        ]
      }
    },
    "/api/special/{website_id}/banjax_auth_hash": {
      "patch": {
        "operationId": "partialUpdateBanjaxPassword",
        "description": "Update banjax passwor of current website",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BanjaxPassword"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/BanjaxPassword"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BanjaxPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BanjaxPassword"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "special"
        ]
      }
    },
    "/api/setup/{website_id}/{setup_step}": {
      "patch": {
        "operationId": "partialUpdateWebsite",
        "description": "API to update website setup status.\nNote status will only increase, not decrease.",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "setup_step",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Placeholder"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Placeholder"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Placeholder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Placeholder"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "setup"
        ]
      }
    },
    "/api/admin/website/complete_setup/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteCompleteSetup",
        "description": "Mark the website as setup completed (No WebsiteStatusGuardMixin)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/reset_to_zero/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteResetToZero",
        "description": "Reset the website status to 0 (No WebsiteStatusGuardMixin)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/approve/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteApprove",
        "description": "Approve website (To 3.4)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/{website_id}/hosting/approve": {
      "patch": {
        "operationId": "partialUpdateHostingAdminApprove",
        "description": "Approve eqPress hosting",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HostingAdminApprove"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/HostingAdminApprove"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/HostingAdminApprove"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HostingAdminApprove"
                }
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-hosting"
        ]
      }
    },
    "/api/admin/website/reject/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteReject",
        "description": "Reject website, To 0 (No WebsiteStatusGuardMixin)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/confirm_ns_info/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteConfirmNSInfo",
        "description": "Confirm NS info (To 3.5)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/confirm_technical_setup/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteConfirmTechnicalSetup",
        "description": "Confirm technical setup (To 3.6)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/update_status_and_notify/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteUpdateStatusAndNotify",
        "description": "Update website status and notify (To 4.0)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/website/restart_admin_setup/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteRestartAdminSetup",
        "description": "Restart admin setup, To to 3.0 and delete approval (No WebsiteStatusGuardMixin)",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/buisness/enable/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteBuissnessEnable",
        "description": "Enable buisness statuson website",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/admin/buisness/disable/{website_id}": {
      "patch": {
        "operationId": "partialUpdateWebsiteBuissnessDisable",
        "description": "Disable buisness statuson website",
        "parameters": [
          {
            "name": "website_id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            },
            "application/x-www-form-urlencoded": {
              "schema": {}
            },
            "multipart/form-data": {
              "schema": {}
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": ""
          }
        },
        "tags": [
          "admin-website"
        ]
      }
    },
    "/api/website/{id}/authorize_user/{ppk}": {
      "delete": {
        "operationId": "destroyWebsiteAuthorize",
        "description": "Delete target website group using website group ID (ppk) under current website",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ppk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "website-authorize-user-detail"
        ]
      }
    },
    "/api/certificate/{id}/{cpk}": {
      "delete": {
        "operationId": "destroyCertificateOrigin",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cpk",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "certificate"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "UserProfile": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "readOnly": true
          },
          "tos_accepted": {
            "type": "boolean"
          },
          "locale": {
            "type": "string",
            "maxLength": 5
          },
          "pgp_key": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "EmailUnsubscribe": {
        "type": "object",
        "properties": {
          "signed_email": {
            "type": "string"
          }
        },
        "required": [
          "signed_email"
        ]
      },
      "WebsiteListCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "maxLength": 255
          },
          "status": {
            "type": "number",
            "readOnly": true
          },
          "ip_address": {
            "type": "string",
            "nullable": true,
            "maxLength": 16
          },
          "admin_key": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "under_attack": {
            "type": "boolean"
          },
          "nsinfo": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "business": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "data": {
                  "type": "object",
                  "nullable": true
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "creator": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "is_eqpress": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "url"
        ]
      },
      "WebsiteDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "url": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "type": "number",
            "readOnly": true
          },
          "ip_address": {
            "type": "string",
            "nullable": true,
            "maxLength": 16
          },
          "admin_key": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "under_attack": {
            "type": "boolean"
          },
          "nsinfo": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "business": {
            "type": "boolean",
            "readOnly": true
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255
                },
                "data": {
                  "type": "object",
                  "nullable": true
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "creator": {
            "type": "string",
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "is_eqpress": {
            "type": "string",
            "readOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "options",
          "password"
        ]
      },
      "WebsiteOption": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "WebsiteOptionDetail": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "data": {
            "type": "object",
            "nullable": true
          },
          "website_id": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "name"
        ]
      },
      "RecordListCreate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "maxLength": 6
          },
          "hostname": {
            "type": "string",
            "maxLength": 255
          },
          "value": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "nullable": true
          },
          "ttl": {
            "type": "integer",
            "nullable": true
          },
          "website_id": {
            "type": "string",
            "readOnly": true
          },
          "website": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "type",
          "hostname"
        ]
      },
      "RecordDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "maxLength": 6
          },
          "hostname": {
            "type": "string",
            "maxLength": 255
          },
          "value": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "nullable": true
          },
          "ttl": {
            "type": "integer",
            "nullable": true
          },
          "website": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "type",
          "hostname"
        ]
      },
      "WebsiteAuthorize": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "username": {
                "type": "string",
                "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                "pattern": "^[\\w.@+-]+\\\\z",
                "maxLength": 150
              },
              "email": {
                "type": "string",
                "format": "email",
                "maxLength": 254
              },
              "first_name": {
                "type": "string",
                "maxLength": 150
              },
              "last_name": {
                "type": "string",
                "maxLength": 150
              },
              "date_joined": {
                "type": "string",
                "format": "date-time"
              },
              "last_login": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "is_active": {
                "type": "boolean",
                "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
              },
              "is_staff": {
                "type": "boolean",
                "description": "Designates whether the user can log into this admin site."
              },
              "is_superuser": {
                "type": "boolean",
                "description": "Designates that this user has all permissions without explicitly assigning them."
              },
              "has_password": {
                "type": "string",
                "readOnly": true
              },
              "twofa_enabled": {
                "type": "string",
                "readOnly": true
              }
            },
            "required": [
              "username"
            ],
            "readOnly": true
          },
          "group": {
            "type": "string"
          },
          "role": {
            "enum": [
              "administrator",
              "collaborator"
            ],
            "type": "string",
            "writeOnly": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "writeOnly": true
          }
        },
        "required": [
          "email"
        ]
      },
      "ZoneFetch": {
        "type": "object",
        "properties": {
          "async_id": {
            "type": "string",
            "writeOnly": true,
            "maxLength": 255
          },
          "fast_scan": {
            "type": "boolean",
            "writeOnly": true
          },
          "website_id": {
            "type": "integer",
            "writeOnly": true
          }
        }
      },
      "TaskStatusFetchZone": {
        "type": "object",
        "properties": {}
      },
      "ActionLog": {
        "type": "object",
        "properties": {}
      },
      "Placeholder": {
        "type": "object",
        "properties": {}
      },
      "Survey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "survey_reason": {
            "enum": [
              "A-Under-Attack",
              "B-Under-Threat",
              "C-Better-Security"
            ],
            "type": "string"
          },
          "survey_country": {
            "enum": [
              "AF",
              "AX",
              "AL",
              "DZ",
              "AS",
              "AD",
              "AO",
              "AI",
              "AQ",
              "AG",
              "AR",
              "AM",
              "AW",
              "AU",
              "AT",
              "AZ",
              "BS",
              "BH",
              "BD",
              "BB",
              "BY",
              "BE",
              "BZ",
              "BJ",
              "BM",
              "BT",
              "BO",
              "BQ",
              "BA",
              "BW",
              "BV",
              "BR",
              "IO",
              "BN",
              "BG",
              "BF",
              "BI",
              "CV",
              "KH",
              "CM",
              "CA",
              "KY",
              "CF",
              "TD",
              "CL",
              "CN",
              "CX",
              "CC",
              "CO",
              "KM",
              "CG",
              "CD",
              "CK",
              "CR",
              "CI",
              "HR",
              "CU",
              "CW",
              "CY",
              "CZ",
              "DK",
              "DJ",
              "DM",
              "DO",
              "EC",
              "EG",
              "SV",
              "GQ",
              "ER",
              "EE",
              "SZ",
              "ET",
              "FK",
              "FO",
              "FJ",
              "FI",
              "FR",
              "GF",
              "PF",
              "TF",
              "GA",
              "GM",
              "GE",
              "DE",
              "GH",
              "GI",
              "GR",
              "GL",
              "GD",
              "GP",
              "GU",
              "GT",
              "GG",
              "GN",
              "GW",
              "GY",
              "HT",
              "HM",
              "VA",
              "HN",
              "HK",
              "HU",
              "IS",
              "IN",
              "ID",
              "IR",
              "IQ",
              "IE",
              "IM",
              "IL",
              "IT",
              "JM",
              "JP",
              "JE",
              "JO",
              "KZ",
              "KE",
              "KI",
              "KP",
              "KR",
              "KW",
              "KG",
              "LA",
              "LV",
              "LB",
              "LS",
              "LR",
              "LY",
              "LI",
              "LT",
              "LU",
              "MO",
              "MG",
              "MW",
              "MY",
              "MV",
              "ML",
              "MT",
              "MH",
              "MQ",
              "MR",
              "MU",
              "YT",
              "MX",
              "FM",
              "MD",
              "MC",
              "MN",
              "ME",
              "MS",
              "MA",
              "MZ",
              "MM",
              "NA",
              "NR",
              "NP",
              "NL",
              "NC",
              "NZ",
              "NI",
              "NE",
              "NG",
              "NU",
              "NF",
              "MK",
              "MP",
              "NO",
              "OM",
              "PK",
              "PW",
              "PS",
              "PA",
              "PG",
              "PY",
              "PE",
              "PH",
              "PN",
              "PL",
              "PT",
              "PR",
              "QA",
              "RE",
              "RO",
              "RU",
              "RW",
              "BL",
              "SH",
              "KN",
              "LC",
              "MF",
              "PM",
              "VC",
              "WS",
              "SM",
              "ST",
              "SA",
              "SN",
              "RS",
              "SC",
              "SL",
              "SG",
              "SX",
              "SK",
              "SI",
              "SB",
              "SO",
              "ZA",
              "GS",
              "SS",
              "ES",
              "LK",
              "SD",
              "SR",
              "SJ",
              "SE",
              "CH",
              "SY",
              "TW",
              "TJ",
              "TZ",
              "TH",
              "TL",
              "TG",
              "TK",
              "TO",
              "TT",
              "TN",
              "TR",
              "TM",
              "TC",
              "TV",
              "UG",
              "UA",
              "AE",
              "GB",
              "US",
              "UM",
              "UY",
              "UZ",
              "VU",
              "VE",
              "VN",
              "VG",
              "VI",
              "WF",
              "EH",
              "YE",
              "ZM",
              "ZW",
              ""
            ],
            "type": "string"
          },
          "survey_regional_focus": {
            "enum": [
              "EE",
              "WE",
              "EUA",
              "EA",
              "SEA",
              "SA",
              "ME",
              "OC",
              "NAF",
              "SAF",
              "WAF",
              "SSAF",
              "NA",
              "SAM",
              "CA",
              "GL",
              ""
            ],
            "type": "string"
          },
          "survey_content_type": {
            "type": "object"
          },
          "survey_language": {
            "type": "object"
          },
          "input_description": {
            "type": "string"
          },
          "input_tech_description": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "website": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "readOnly": true
              },
              "url": {
                "type": "string",
                "maxLength": 255
              },
              "status": {
                "type": "number"
              },
              "ip_address": {
                "type": "string",
                "nullable": true,
                "maxLength": 16
              },
              "under_attack": {
                "type": "boolean"
              },
              "nsinfo": {
                "type": "string",
                "nullable": true,
                "maxLength": 255
              },
              "business": {
                "type": "boolean"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true
              },
              "last_migration_at": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "creator": {
                "type": "integer"
              }
            },
            "required": [
              "url",
              "creator"
            ],
            "readOnly": true
          }
        },
        "required": [
          "survey_reason",
          "survey_country",
          "survey_regional_focus",
          "survey_content_type",
          "survey_language",
          "input_description"
        ]
      },
      "Hosting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "maxLength": 255
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "mission_textarea": {
            "type": "string",
            "nullable": true
          },
          "info_need_textarea": {
            "type": "string",
            "nullable": true
          },
          "audience_textarea": {
            "type": "string",
            "nullable": true
          },
          "how_we_help_textarea": {
            "type": "string",
            "nullable": true
          },
          "past_tech_difficulties_textarea": {
            "type": "string",
            "nullable": true
          },
          "new_or_migrate": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "pre_load_theme": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "other_theme": {
            "type": "string",
            "nullable": true,
            "maxLength": 255
          },
          "status": {
            "enum": [
              "request",
              "complete"
            ],
            "type": "string"
          },
          "hosting_type": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "email"
        ]
      },
      "UserAdmin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "username": {
            "type": "string",
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
            "pattern": "^[\\w.@+-]+\\\\z",
            "maxLength": 150
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 254
          },
          "first_name": {
            "type": "string",
            "maxLength": 150
          },
          "last_name": {
            "type": "string",
            "maxLength": 150
          },
          "date_joined": {
            "type": "string",
            "format": "date-time"
          },
          "last_login": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
          },
          "is_staff": {
            "type": "boolean",
            "description": "Designates whether the user can log into this admin site."
          },
          "is_superuser": {
            "type": "boolean",
            "description": "Designates that this user has all permissions without explicitly assigning them."
          },
          "twofa_enabled": {
            "type": "string",
            "readOnly": true
          },
          "has_password": {
            "type": "string",
            "readOnly": true
          },
          "userprofile": {
            "type": "object",
            "properties": {
              "tos_accepted": {
                "type": "boolean"
              },
              "pgp_key": {
                "type": "string",
                "nullable": true
              },
              "locale": {
                "type": "string",
                "maxLength": 5
              },
              "stripe_cus_id": {
                "type": "string",
                "nullable": true,
                "maxLength": 255
              },
              "is_unsubscribed": {
                "type": "boolean"
              }
            },
            "readOnly": true
          },
          "websites": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "maxLength": 255
                },
                "status": {
                  "type": "number"
                },
                "ip_address": {
                  "type": "string",
                  "nullable": true,
                  "maxLength": 16
                },
                "under_attack": {
                  "type": "boolean"
                },
                "nsinfo": {
                  "type": "string",
                  "nullable": true,
                  "maxLength": 255
                },
                "business": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "nullable": true
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "nullable": true
                },
                "last_migration_at": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "creator": {
                  "type": "integer"
                }
              },
              "required": [
                "url",
                "creator"
              ]
            },
            "readOnly": true
          }
        },
        "required": [
          "username"
        ]
      },
      "CertificateOrigin": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "hostnames": {
            "type": "string"
          },
          "date_created": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "date_expires": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "fingerprint": {
            "type": "string",
            "readOnly": true
          },
          "website": {
            "type": "string",
            "readOnly": true
          },
          "has_private": {
            "type": "boolean",
            "readOnly": true,
            "nullable": true
          },
          "pem_encoded_csr": {
            "type": "string",
            "writeOnly": true
          }
        },
        "required": [
          "hostnames"
        ]
      },
      "CertificatePublic": {
        "type": "object",
        "properties": {
          "use_ssl": {
            "type": "boolean",
            "writeOnly": true
          },
          "cert_issuer": {
            "type": "string",
            "writeOnly": true
          },
          "certificate_file": {
            "type": "string",
            "format": "binary",
            "writeOnly": true
          },
          "chain_file": {
            "type": "string",
            "format": "binary",
            "writeOnly": true
          },
          "key_file": {
            "type": "string",
            "format": "binary",
            "writeOnly": true
          }
        },
        "required": [
          "use_ssl"
        ]
      },
      "Cstats": {
        "type": "object",
        "properties": {
          "duration": {
            "enum": [
              "hour",
              "6hours",
              "day",
              "week",
              "month",
              "year"
            ],
            "type": "string",
            "default": "day"
          },
          "start_date": {
            "type": "string"
          },
          "offset": {
            "type": "integer",
            "default": 0
          }
        }
      },
      "UserMFAMethod": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "is_primary": {
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      },
      "StripeSubscription": {
        "type": "object",
        "properties": {}
      },
      "StripeWebsiteSubscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "website": {
            "type": "string",
            "readOnly": true
          },
          "subscription_id": {
            "type": "string",
            "readOnly": true
          },
          "price_id": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "readOnly": true
          },
          "current_period_start": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "current_period_end": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "AuthToken": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "writeOnly": true
          },
          "password": {
            "type": "string",
            "writeOnly": true
          },
          "token": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "AuthSignUpUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "username": {
            "type": "string",
            "readOnly": true,
            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
          },
          "first_name": {
            "type": "string",
            "readOnly": true
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetToken": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "PasswordToken": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "token"
        ]
      },
      "Email": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        },
        "required": [
          "email"
        ]
      },
      "CachePurge": {
        "type": "object",
        "properties": {}
      },
      "StripeCheckout": {
        "type": "object",
        "properties": {
          "success_url": {
            "type": "string",
            "format": "uri",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\\\z"
          },
          "cancel_url": {
            "type": "string",
            "format": "uri",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\\\z"
          },
          "price_id": {
            "type": "string"
          }
        },
        "required": [
          "success_url",
          "cancel_url",
          "price_id"
        ]
      },
      "StripeWebhook": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          }
        },
        "required": [
          "data"
        ]
      },
      "StripePortal": {
        "type": "object",
        "properties": {
          "return_url": {
            "type": "string",
            "format": "uri",
            "pattern": "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\.(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\]|([a-z\u00a1-\uffff0-9](?:[a-z\u00a1-\uffff0-9-]{0,61}[a-z\u00a1-\uffff0-9])?(?:\\.(?!-)[a-z\u00a1-\uffff0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\u00a1-\uffff-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\\\z"
          }
        },
        "required": [
          "return_url"
        ]
      },
      "ChangePassword": {
        "type": "object",
        "properties": {
          "old_password": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          }
        },
        "required": [
          "old_password",
          "new_password"
        ]
      },
      "ChangeEmail": {
        "type": "object",
        "properties": {
          "new_email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "new_email",
          "password"
        ]
      },
      "BanjaxPassword": {
        "type": "object",
        "properties": {
          "banjax_auth_hash": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "banjax_auth_hash"
        ]
      },
      "HostingAdminApprove": {
        "type": "object",
        "properties": {
          "no_email": {
            "type": "boolean",
            "writeOnly": true
          }
        }
      }
    }
  }
}